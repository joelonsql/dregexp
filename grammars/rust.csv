parser,nodetype,tokenizepattern,parsepattern,primitivetype,nodegroup,precedence,subparser
Rust,WhiteSpace,\s+,,,,,
Rust,InnerLineDocComment,//!.*,,,,,
Rust,InnerBlockDocComment,/\*![\s\S]*?\*/,,,,,
Rust,DocComment,///(?!/).*,,,,,
Rust,OuterBlockDocComment,/\*\*(?!\*)[\s\S]*?\*/,,,,,
Rust,LineComment,//.*,,,,,
Rust,BlockComment,/\*[\s\S]*?\*/,,,,,
Rust,DotDotDot,\.\.\.,,,,,
Rust,DotDotEq,\.\.=,,,,,
Rust,ShlEq,<<=,,,,,
Rust,ShrEq,>>=,,,,,
Rust,PlusEq,\+=,,,,,
Rust,FatArrow,=>,,,,,
Rust,RArrow,->,,,,,
Rust,LArrow,<-,,,,,
Rust,EqEq,==,,,,,
Rust,DotDot,\.\.,,,,,
Rust,Shr,>>,,,,,
Rust,Shl,<<,,,,,
Rust,Ge,>=,,,,,
Rust,MinusEq,-=,,,,,
Rust,PercentEq,%=,,,,,
Rust,StarEq,\*=,,,,,
Rust,SlashEq,/=,,,,,
Rust,AndEq,&=,,,,,
Rust,CaretEq,\^=,,,,,
Rust,OrEq,\|=,,,,,
Rust,Le,<=,,,,,
Rust,Ne,!=,,,,,
Rust,AndAnd,&&,,,,,
Rust,OrOr,\|\|,,,,,
Rust,ModSep,::,,,,,
Rust,Eq,=,,,,,
Rust,Semi,;,,,,,
Rust,LBrace,\{,,,,,
Rust,RBrace,\},,,,,
Rust,LParen,\(,,,,,
Rust,RParen,\),,,,,
Rust,LBracket,\[,,,,,
Rust,RBracket,\],,,,,
Rust,Comma,",",,,,,
Rust,Dollar,\ $,,,,,
Rust,Colon,:,,,,,
Rust,Star,\*,,,,,
Rust,Not,!,,,,,
Rust,Dot,\.,,,,,
Rust,Lt,<,,,,,
Rust,Gt,>,,,,,
Rust,And,&,,,,,
Rust,Slash,/,,,,,
Rust,Pound,#,,,,,
Rust,Or,\|,,,,,
Rust,Plus,\+,,,,,
Rust,Minus,-,,,,,
Rust,Percent,%,,,,,
Rust,Question,\?,,,,,
Rust,Caret,\^,,,,,
Rust,At,@,,,,,
Rust,StrRaw,r (#*) DOUBLE_QUOTE [\s\S]*? DOUBLE_QUOTE \1,,,,,
Rust,Char,SINGLE_QUOTE (?:[^SINGLE_QUOTE BACKSLASH \n \r \t] | QUOTE_ESCAPE | ASCII_ESCAPE | UNICODE_ESCAPE) SINGLE_QUOTE,,,,,
Rust,Str_,DOUBLE_QUOTE (?:[^DOUBLE_QUOTE BACKSLASH] | QUOTE_ESCAPE | ASCII_ESCAPE | UNICODE_ESCAPE | STRING_CONTINUE)* DOUBLE_QUOTE,,,,,
Rust,Byte,b SINGLE_QUOTE (?:ASCII_FOR_CHAR | BYTE_ESCAPE) SINGLE_QUOTE,,,,,
Rust,ByteStr,b DOUBLE_QUOTE (?:ASCII_FOR_STRING | BYTE_ESCAPE | STRING_CONTINUE)* DOUBLE_QUOTE,,,,,
Rust,ByteStrRaw,b r (?:RAW_STRING_CONTENT | # RAW_STRING_CONTENT #),,,,,
Rust,IdentOrKeyword,IDENT_LITERAL,,,,,Keyword
Rust,Lifetime,' IDENT_LITERAL,,,,,
Rust,Float,DEC_LITERAL (?:FLOAT_SUFFIX | FLOAT_EXPONENT FLOAT_SUFFIX? | \. DEC_LITERAL FLOAT_EXPONENT? FLOAT_SUFFIX? | \. (?![. _ a-z A-Z])),,,,,
Rust,Integer,(?:BIN_LITERAL | OCT_LITERAL | HEX_LITERAL | DEC_LITERAL) INTEGER_SUFFIX?,,,,,
Rust,IDENT_LITERAL,[a-z A-Z _][a-z A-Z 0-9 _]*,,,,,
Rust,SINGLE_QUOTE,"'",,,,,
Rust,DOUBLE_QUOTE,"""",,,,,
Rust,BACKSLASH,\\,,,,,
Rust,QUOTE_ESCAPE,BACKSLASH [SINGLE_QUOTE DOUBLE_QUOTE],,,,,
Rust,ASCII_ESCAPE,BACKSLASH (?:x [OCT_DIGIT] [HEX_DIGIT] | [n r t BACKSLASH 0]),,,,,
Rust,UNICODE_ESCAPE,"BACKSLASH u \{ [HEX_DIGIT]{1,6} \}",,,,,
Rust,STRING_CONTINUE,BACKSLASH \n,,,,,
Rust,ASCII_FOR_CHAR,[\x00-\x08 \x0b-\x0c \x0e-\x26 \x28-\x5b \x5d-\x7f],,,,,
Rust,BYTE_ESCAPE,BACKSLASH (?:x [HEX_DIGIT]{2} | [n r t BACKSLASH SINGLE_QUOTE DOUBLE_QUOTE 0]),,,,,
Rust,ASCII_FOR_STRING,[\x00-\x21 \x23-\x5b \x5d-\x7f],,,,,
Rust,RAW_STRING_CONTENT,DOUBLE_QUOTE [\x00-\x7f]*? DOUBLE_QUOTE,,,,,
Rust,BIN_DIGIT,0-1,,,,,
Rust,OCT_DIGIT,0-7,,,,,
Rust,DEC_DIGIT,0-9,,,,,
Rust,HEX_DIGIT,0-9 a-f A-F,,,,,
Rust,INTEGER_SUFFIX,(?:[u i](?:8|16|32|64|128|s i z e)),,,,,
Rust,FLOAT_EXPONENT,(?:[e E] [+-]? [DEC_DIGIT _]* [DEC_DIGIT] [DEC_DIGIT _]*),,,,,
Rust,FLOAT_SUFFIX,(?:f32|f64),,,,,
Rust,DEC_LITERAL,[DEC_DIGIT] [DEC_DIGIT _]*,,,,,
Rust,BIN_LITERAL,0 b [BIN_DIGIT _]* [BIN_DIGIT] [BIN_DIGIT _]*,,,,,
Rust,OCT_LITERAL,0 o [OCT_DIGIT _]* [OCT_DIGIT] [OCT_DIGIT _]*,,,,,
Rust,HEX_LITERAL,0 x [HEX_DIGIT _]* [HEX_DIGIT] [HEX_DIGIT _]*,,,,,
Keyword,abstract,a b s t r a c t $,,,,,
Keyword,alignof,a l i g n o f $,,,,,
Keyword,as,a s $,,,,,
Keyword,become,b e c o m e $,,,,,
Keyword,box,b o x $,,,,,
Keyword,break,b r e a k $,,,,,
Keyword,const,c o n s t $,,,,,
Keyword,continue,c o n t i n u e $,,,,,
Keyword,crate,c r a t e $,,,,,
Keyword,do,d o $,,,,,
Keyword,else,e l s e $,,,,,
Keyword,enum,e n u m $,,,,,
Keyword,extern,e x t e r n $,,,,,
Keyword,false,f a l s e $,,,,,
Keyword,final,f i n a l $,,,,,
Keyword,fn,f n $,,,,,
Keyword,for,f o r $,,,,,
Keyword,if,i f $,,,,,
Keyword,impl,i m p l $,,,,,
Keyword,in,i n $,,,,,
Keyword,let,l e t $,,,,,
Keyword,loop,l o o p $,,,,,
Keyword,macro,m a c r o $,,,,,
Keyword,match,m a t c h $,,,,,
Keyword,mod,m o d $,,,,,
Keyword,move,m o v e $,,,,,
Keyword,mut,m u t $,,,,,
Keyword,offsetof,o f f s e t o f $,,,,,
Keyword,override,o v e r r i d e $,,,,,
Keyword,priv,p r i v $,,,,,
Keyword,pub,p u b $,,,,,
Keyword,pure,p u r e $,,,,,
Keyword,ref,r e f $,,,,,
Keyword,return,r e t u r n $,,,,,
Keyword,self,s e l f $,,,,,
Keyword,Self,S e l f $,,,,,
Keyword,sizeof,s i z e o f $,,,,,
Keyword,static,s t a t i c $,,,,,
Keyword,struct,s t r u c t $,,,,,
Keyword,super,s u p e r $,,,,,
Keyword,trait,t r a i t $,,,,,
Keyword,true,t r u e $,,,,,
Keyword,type,t y p e $,,,,,
Keyword,typeof,t y p e o f $,,,,,
Keyword,unsafe,u n s a f e $,,,,,
Keyword,unsized,u n s i z e d $,,,,,
Keyword,use,u s e $,,,,,
Keyword,virtual,v i r t u a l $,,,,,
Keyword,where,w h e r e $,,,,,
Keyword,while,w h i l e $,,,,,
Keyword,yield,y i e l d $,,,,,
Keyword,Ident,IDENT_LITERAL $,,,,,